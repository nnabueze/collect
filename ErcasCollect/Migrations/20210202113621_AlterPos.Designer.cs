// <auto-generated />
using System;
using ErcasCollect.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ErcasCollect.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210202113621_AlterPos")]
    partial class AlterPos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ErcasCollect.Domain.Models.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.BankDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BVN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BankId1")
                        .HasColumnType("int");

                    b.Property<bool>("IsValidated")
                        .HasColumnType("bit");

                    b.Property<string>("OwnerId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BankId1");

                    b.ToTable("BankDetails");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.Batch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillerId")
                        .HasColumnType("int");

                    b.Property<int?>("CloseBatchTransactionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Createdby")
                        .HasColumnType("int");

                    b.Property<bool>("IsBatchClosed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit");

                    b.Property<int>("ItemCount")
                        .HasColumnType("int");

                    b.Property<int?>("LevelOneId")
                        .HasColumnType("int");

                    b.Property<int?>("LevelTwoId")
                        .HasColumnType("int");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OfflineBatchId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PaymentChannel")
                        .HasColumnType("int");

                    b.Property<int?>("PosId")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillerId");

                    b.HasIndex("CloseBatchTransactionId");

                    b.HasIndex("LevelOneId");

                    b.HasIndex("LevelTwoId");

                    b.HasIndex("OfflineBatchId")
                        .IsUnique()
                        .HasFilter("[OfflineBatchId] IS NOT NULL");

                    b.HasIndex("PosId");

                    b.HasIndex("ReferenceKey")
                        .IsUnique()
                        .HasFilter("[ReferenceKey] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("Batchs");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.Biller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("BillerTin")
                        .HasColumnType("nvarchar(32)");

                    b.Property<int?>("BillerTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Commission")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Createdby")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("GatewayKeyVector")
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("GatewaySecretKey")
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("GatewayUsername")
                        .HasColumnType("nvarchar(32)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGatewayOnbaord")
                        .HasColumnType("bit");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("ReferenceKey")
                        .HasColumnType("nvarchar(32)");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillerTypeId");

                    b.HasIndex("ReferenceKey")
                        .IsUnique()
                        .HasFilter("[ReferenceKey] IS NOT NULL");

                    b.HasIndex("StateId");

                    b.ToTable("Billers");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.BillerEbillsProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Createdby")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BillerId");

                    b.ToTable("BillerEbillsProducts");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.BillerNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillerEbillsProductId")
                        .HasColumnType("int");

                    b.Property<int?>("BillerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Createdby")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NotificationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BillerEbillsProductId");

                    b.HasIndex("BillerId");

                    b.ToTable("BillerNotifications");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.BillerTINDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsValidated")
                        .HasColumnType("bit");

                    b.Property<string>("TIN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BillerId");

                    b.ToTable("BillerTinDetails");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.BillerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("BillerTypes");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.BillerValidation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillerEbillsProductId")
                        .HasColumnType("int");

                    b.Property<int?>("BillerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Createdby")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VaidationStep")
                        .HasColumnType("int");

                    b.Property<string>("ValidationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BillerEbillsProductId");

                    b.HasIndex("BillerId");

                    b.ToTable("BillerValidations");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.CategoryOneService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Createdby")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LevelOneId")
                        .HasColumnType("int");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceKey")
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("BillerId");

                    b.HasIndex("LevelOneId");

                    b.ToTable("CategoryOneServices");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.CategoryTwoService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BillerId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryOneServiceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Createdby")
                        .HasColumnType("int");

                    b.Property<bool>("IsAmountFixed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LevelOneId")
                        .HasColumnType("int");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("ReferenceKey")
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("BillerId");

                    b.HasIndex("CategoryOneServiceId");

                    b.HasIndex("LevelOneId");

                    b.ToTable("CategoryTwoServices");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.CloseBatchTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Createdby")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<int?>("LevelOneId")
                        .HasColumnType("int");

                    b.Property<int?>("LevelTwoId")
                        .HasColumnType("int");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentChannel")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillerId");

                    b.HasIndex("LevelOneId");

                    b.HasIndex("LevelTwoId");

                    b.HasIndex("ReferenceKey")
                        .IsUnique()
                        .HasFilter("[ReferenceKey] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("CloseBatchTransactions");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.EbillsProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Createdby")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EbillsProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2021, 2, 2, 11, 36, 21, 38, DateTimeKind.Utc).AddTicks(2823),
                            Createdby = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductName = "Remittance"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2021, 2, 2, 11, 36, 21, 38, DateTimeKind.Utc).AddTicks(4860),
                            Createdby = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductName = "Tax"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2021, 2, 2, 11, 36, 21, 38, DateTimeKind.Utc).AddTicks(5239),
                            Createdby = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductName = "Non-Tax"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2021, 2, 2, 11, 36, 21, 38, DateTimeKind.Utc).AddTicks(5250),
                            Createdby = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductName = "Invoice"
                        });
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.FundSweep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BankId")
                        .HasColumnType("int");

                    b.Property<int?>("BillerId")
                        .HasColumnType("int");

                    b.Property<int>("ConfirmedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateProcessed")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LevelOneId")
                        .HasColumnType("int");

                    b.Property<int?>("LevelTwoId")
                        .HasColumnType("int");

                    b.Property<bool>("isConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("isProcessed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("BillerId");

                    b.HasIndex("LevelOneId");

                    b.HasIndex("LevelTwoId");

                    b.ToTable("FundSweep");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.LevelDisplayName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillerId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryOneDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryTwoDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Createdby")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LevelOneDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LevelTwoDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BillerId");

                    b.ToTable("LevelDisplayNames");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.LevelOne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BillerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Createdby")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(32)");

                    b.Property<decimal>("FundsweepPercentage")
                        .HasColumnType("decimal(18,6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("ReferenceKey")
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("BillerId");

                    b.HasIndex("ReferenceKey")
                        .IsUnique()
                        .HasFilter("[ReferenceKey] IS NOT NULL");

                    b.ToTable("LevelOne");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.LevelTwo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BillerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Createdby")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LevelOneId")
                        .HasColumnType("int");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("ReferenceKey")
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("BillerId");

                    b.HasIndex("LevelOneId");

                    b.HasIndex("ReferenceKey")
                        .IsUnique()
                        .HasFilter("[ReferenceKey] IS NOT NULL");

                    b.ToTable("LevelTwo");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.MetaData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillerTypeId")
                        .HasColumnType("int");

                    b.Property<string>("FieldEight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldFive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldFour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldSeven")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldSix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldThree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldTwo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BillerTypeId");

                    b.ToTable("MetaData");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.NumberSeries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastDateIssued")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastIssued")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("NumberSeries");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.OS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("Os");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.PaymentChannel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("PaymentChannels");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.Pos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivationPin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("BillerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Createdby")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLogin")
                        .HasColumnType("bit");

                    b.Property<int?>("LastUserId")
                        .HasColumnType("int");

                    b.Property<int?>("LevelOneId")
                        .HasColumnType("int");

                    b.Property<int?>("LevelTwoId")
                        .HasColumnType("int");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PosImei")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ReferenceKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivationPin")
                        .IsUnique()
                        .HasFilter("[ActivationPin] IS NOT NULL");

                    b.HasIndex("BillerId");

                    b.HasIndex("LevelOneId");

                    b.HasIndex("LevelTwoId");

                    b.HasIndex("PosImei")
                        .IsUnique()
                        .HasFilter("[PosImei] IS NOT NULL");

                    b.ToTable("Poses");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.PosLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Createdby")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillerId");

                    b.HasIndex("PosId");

                    b.ToTable("PosLocation");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.Settlement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BillerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestinationBank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaidBy")
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("PayerPhone")
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("PaymentChannel")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceID")
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("SourceBank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionNumber")
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillerId");

                    b.ToTable("Settlements");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("State");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.TaxPayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Createdby")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastPaidDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillerId");

                    b.ToTable("TaxPayers");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BatchReferenceKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryTwoServiceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Createdby")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OfflineBatchId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PayerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayerPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceKey")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryTwoServiceId");

                    b.HasIndex("OfflineBatchId")
                        .IsUnique()
                        .HasFilter("[OfflineBatchId] IS NOT NULL");

                    b.HasIndex("ReferenceKey")
                        .IsUnique()
                        .HasFilter("[ReferenceKey] IS NOT NULL");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.TransactionSummaryView", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountCollected")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BillerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateClosed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LevelOneId")
                        .HasColumnType("int");

                    b.Property<int?>("LevelTwoId")
                        .HasColumnType("int");

                    b.Property<bool>("isClosed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BillerId");

                    b.HasIndex("LevelOneId");

                    b.HasIndex("LevelTwoId");

                    b.ToTable("TransactionSummaryViews");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.TransactionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("TransactionTypes");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BillerId")
                        .HasColumnType("int");

                    b.Property<decimal>("CashAtHand")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CollectionLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Createdby")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LevelOneId")
                        .HasColumnType("int");

                    b.Property<int?>("LevelTwoId")
                        .HasColumnType("int");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("SsoId")
                        .HasColumnType("int");

                    b.Property<int>("StatusCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillerId");

                    b.HasIndex("LevelOneId");

                    b.HasIndex("LevelTwoId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.BankDetail", b =>
                {
                    b.HasOne("ErcasCollect.Domain.Models.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId1");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.Batch", b =>
                {
                    b.HasOne("ErcasCollect.Domain.Models.Biller", "Biller")
                        .WithMany()
                        .HasForeignKey("BillerId");

                    b.HasOne("ErcasCollect.Domain.Models.CloseBatchTransaction", "CloseBatchTransaction")
                        .WithMany()
                        .HasForeignKey("CloseBatchTransactionId");

                    b.HasOne("ErcasCollect.Domain.Models.LevelOne", "LevelOne")
                        .WithMany()
                        .HasForeignKey("LevelOneId");

                    b.HasOne("ErcasCollect.Domain.Models.LevelTwo", "LevelTwo")
                        .WithMany()
                        .HasForeignKey("LevelTwoId");

                    b.HasOne("ErcasCollect.Domain.Models.Pos", "Pos")
                        .WithMany()
                        .HasForeignKey("PosId");

                    b.HasOne("ErcasCollect.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.Biller", b =>
                {
                    b.HasOne("ErcasCollect.Domain.Models.BillerType", "BillerType")
                        .WithMany()
                        .HasForeignKey("BillerTypeId");

                    b.HasOne("ErcasCollect.Domain.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.BillerEbillsProduct", b =>
                {
                    b.HasOne("ErcasCollect.Domain.Models.Biller", "Biller")
                        .WithMany("BillerEbillsProducts")
                        .HasForeignKey("BillerId");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.BillerNotification", b =>
                {
                    b.HasOne("ErcasCollect.Domain.Models.BillerEbillsProduct", "BillerEbillsProduct")
                        .WithMany()
                        .HasForeignKey("BillerEbillsProductId");

                    b.HasOne("ErcasCollect.Domain.Models.Biller", "Biller")
                        .WithMany("BillerNotifications")
                        .HasForeignKey("BillerId");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.BillerTINDetail", b =>
                {
                    b.HasOne("ErcasCollect.Domain.Models.Biller", "Biller")
                        .WithMany()
                        .HasForeignKey("BillerId");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.BillerValidation", b =>
                {
                    b.HasOne("ErcasCollect.Domain.Models.BillerEbillsProduct", "BillerEbillsProduct")
                        .WithMany()
                        .HasForeignKey("BillerEbillsProductId");

                    b.HasOne("ErcasCollect.Domain.Models.Biller", "Biller")
                        .WithMany("BillerValidations")
                        .HasForeignKey("BillerId");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.CategoryOneService", b =>
                {
                    b.HasOne("ErcasCollect.Domain.Models.Biller", "Biller")
                        .WithMany("CategoryOneService")
                        .HasForeignKey("BillerId");

                    b.HasOne("ErcasCollect.Domain.Models.LevelOne", "LevelOne")
                        .WithMany("CategoryOneService")
                        .HasForeignKey("LevelOneId");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.CategoryTwoService", b =>
                {
                    b.HasOne("ErcasCollect.Domain.Models.Biller", "Biller")
                        .WithMany("CategoryTwoService")
                        .HasForeignKey("BillerId");

                    b.HasOne("ErcasCollect.Domain.Models.CategoryOneService", "CategoryOneService")
                        .WithMany("CategoryTwoService")
                        .HasForeignKey("CategoryOneServiceId");

                    b.HasOne("ErcasCollect.Domain.Models.LevelOne", "LevelOne")
                        .WithMany("CategoryTwoService")
                        .HasForeignKey("LevelOneId");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.CloseBatchTransaction", b =>
                {
                    b.HasOne("ErcasCollect.Domain.Models.Biller", "Biller")
                        .WithMany()
                        .HasForeignKey("BillerId");

                    b.HasOne("ErcasCollect.Domain.Models.LevelOne", "LevelOne")
                        .WithMany()
                        .HasForeignKey("LevelOneId");

                    b.HasOne("ErcasCollect.Domain.Models.LevelTwo", "LevelTwo")
                        .WithMany()
                        .HasForeignKey("LevelTwoId");

                    b.HasOne("ErcasCollect.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.FundSweep", b =>
                {
                    b.HasOne("ErcasCollect.Domain.Models.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId");

                    b.HasOne("ErcasCollect.Domain.Models.Biller", "Biller")
                        .WithMany()
                        .HasForeignKey("BillerId");

                    b.HasOne("ErcasCollect.Domain.Models.LevelOne", "LevelOne")
                        .WithMany()
                        .HasForeignKey("LevelOneId");

                    b.HasOne("ErcasCollect.Domain.Models.LevelTwo", "LevelTwo")
                        .WithMany()
                        .HasForeignKey("LevelTwoId");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.LevelDisplayName", b =>
                {
                    b.HasOne("ErcasCollect.Domain.Models.Biller", "Biller")
                        .WithMany()
                        .HasForeignKey("BillerId");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.LevelOne", b =>
                {
                    b.HasOne("ErcasCollect.Domain.Models.Biller", "Biller")
                        .WithMany("LevelOne")
                        .HasForeignKey("BillerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.LevelTwo", b =>
                {
                    b.HasOne("ErcasCollect.Domain.Models.Biller", "Biller")
                        .WithMany("LevelTwo")
                        .HasForeignKey("BillerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ErcasCollect.Domain.Models.LevelOne", "LevelOne")
                        .WithMany("LevelTwo")
                        .HasForeignKey("LevelOneId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.MetaData", b =>
                {
                    b.HasOne("ErcasCollect.Domain.Models.BillerType", "BillerTypes")
                        .WithMany()
                        .HasForeignKey("BillerTypeId");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.Pos", b =>
                {
                    b.HasOne("ErcasCollect.Domain.Models.Biller", "Biller")
                        .WithMany("Poses")
                        .HasForeignKey("BillerId");

                    b.HasOne("ErcasCollect.Domain.Models.LevelOne", "LevelOne")
                        .WithMany("Poses")
                        .HasForeignKey("LevelOneId");

                    b.HasOne("ErcasCollect.Domain.Models.LevelTwo", "LevelTwo")
                        .WithMany("Poses")
                        .HasForeignKey("LevelTwoId");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.PosLocation", b =>
                {
                    b.HasOne("ErcasCollect.Domain.Models.Biller", "Biller")
                        .WithMany()
                        .HasForeignKey("BillerId");

                    b.HasOne("ErcasCollect.Domain.Models.Pos", "Pos")
                        .WithMany()
                        .HasForeignKey("PosId");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.Settlement", b =>
                {
                    b.HasOne("ErcasCollect.Domain.Models.Biller", "Biller")
                        .WithMany()
                        .HasForeignKey("BillerId");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.TaxPayer", b =>
                {
                    b.HasOne("ErcasCollect.Domain.Models.Biller", "Biller")
                        .WithMany()
                        .HasForeignKey("BillerId");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.Transaction", b =>
                {
                    b.HasOne("ErcasCollect.Domain.Models.CategoryTwoService", "CategoryTwoService")
                        .WithMany()
                        .HasForeignKey("CategoryTwoServiceId");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.TransactionSummaryView", b =>
                {
                    b.HasOne("ErcasCollect.Domain.Models.Biller", "Biller")
                        .WithMany()
                        .HasForeignKey("BillerId");

                    b.HasOne("ErcasCollect.Domain.Models.LevelOne", "LevelOne")
                        .WithMany()
                        .HasForeignKey("LevelOneId");

                    b.HasOne("ErcasCollect.Domain.Models.LevelTwo", "LevelTwo")
                        .WithMany()
                        .HasForeignKey("LevelTwoId");
                });

            modelBuilder.Entity("ErcasCollect.Domain.Models.User", b =>
                {
                    b.HasOne("ErcasCollect.Domain.Models.Biller", "Biller")
                        .WithMany("Users")
                        .HasForeignKey("BillerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ErcasCollect.Domain.Models.LevelOne", "LevelOne")
                        .WithMany("Users")
                        .HasForeignKey("LevelOneId");

                    b.HasOne("ErcasCollect.Domain.Models.LevelTwo", "LevelTwo")
                        .WithMany("Users")
                        .HasForeignKey("LevelTwoId");

                    b.HasOne("ErcasCollect.Domain.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");
                });
#pragma warning restore 612, 618
        }
    }
}
